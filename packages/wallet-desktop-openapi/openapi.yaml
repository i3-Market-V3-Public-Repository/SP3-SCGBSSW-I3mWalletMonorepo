openapi: 3.0.2
info:
  version: 1.5.3
  title: i3M Wallet API
  contact:
    name: Juan HernÃ¡ndez Serrano
    email: j.hernandez@upc.edu
  license:
    name: MIT
  description: >
    i3M-Wallet API that can be used to interact with the i3M-Wallet. Most of the
    functionalities will also require end-user interaction with the wallet app.
tags:
  - name: identities
    description: |
      Endpoints to manage identities (DIDs).
  - name: resources
    description: >
      Besides identities, the wallet MAY securely store arbitrary resources in a
      secure vault, which may be selectively disclosed upon request. Currently
      storing verifiable credentials
  - name: selectiveDisclosure
    description: >
      Ednpoints for the selective disclosure process (used to present verifiable
      credentials)
  - name: transaction
    description: >
      Endpoints for deploying signed transactions to the DLT the wallet is
      connected to.
  - name: utils
    description: |
      Additional helpler functions
paths:
  /identities:
    get:
      summary: List all DIDs
      operationId: identityList
      x-eov-operation-handler: identities
      tags:
        - identities
      parameters:
        - in: query
          name: alias
          schema:
            type: string
            description: An alias for the identity
      responses:
        '200':
          description: An array of identities
          content:
            application/json:
              schema: &ref_13
                title: IdentityListInput
                description: A list of DIDs
                type: array
                items:
                  type: object
                  properties:
                    did: &ref_0
                      title: DID
                      type: string
                      pattern: ^did:ethr:(\w+:)?0x([0-9a-fA-F]{40}([0-9a-fA-F]{26})?)$
                      example: >-
                        did:ethr:i3m:0x031bee96cfae8bad99ea0dd3d08d1a3296084f894e9ddfe1ffe141133e81ac5863
                  required:
                    - did
        default:
          description: unexpected error
          content:
            application/json:
              schema: &ref_1
                type: object
                title: Error
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
    post:
      summary: Create an account
      operationId: identityCreate
      x-eov-operation-handler: identities
      tags:
        - identities
      requestBody:
        description: Create a DID.
        required: false
        content:
          application/json:
            schema: &ref_14
              title: IdentityCreateInput
              description: >
                Besides the here defined options, provider specific properties
                should be added here if necessary, e.g. "path" for BIP21
                wallets, or the key algorithm (if the wallet supports multiple
                algorithm).
              type: object
              properties:
                alias:
                  type: string
              additionalProperties: true
      responses:
        '201':
          description: the ID and type of the created account
          content:
            application/json:
              schema: &ref_15
                title: IdentityCreateOutput
                description: |
                  It returns the account id and type
                type: object
                properties:
                  did: *ref_0
                additionalProperties: true
                required:
                  - did
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
  /identities/select:
    get:
      summary: Gets an identity selected by the user.
      operationId: identitySelect
      x-eov-operation-handler: identities
      tags:
        - identities
      parameters:
        - in: query
          name: reason
          schema:
            type: string
            description: Message to show to the user with the reason to pick an identity
      responses:
        '200':
          description: Selected identity
          content:
            application/json:
              schema: &ref_6
                title: IdentitySelectOutput
                type: object
                properties:
                  did: *ref_0
                required:
                  - did
  /identities/{did}/sign:
    post:
      summary: Signs a message
      operationId: identitySign
      x-eov-operation-handler: identities
      tags:
        - identities
      parameters:
        - in: path
          name: did
          schema: *ref_0
          required: true
      requestBody:
        description: Data to sign.
        required: true
        content:
          application/json:
            schema: &ref_7
              title: SignInput
              oneOf:
                - &ref_9
                  title: SignTransaction
                  type: object
                  properties:
                    type:
                      enum:
                        - Transaction
                    data: &ref_2
                      title: Transaction
                      type: object
                      additionalProperties: true
                      properties:
                        from:
                          type: string
                        to:
                          type: string
                        nonce:
                          type: number
                  required:
                    - type
                    - data
                - &ref_8
                  title: SignRaw
                  type: object
                  properties:
                    type:
                      enum:
                        - Raw
                    data:
                      type: object
                      properties:
                        payload:
                          description: Base64Url encoded data to sign
                          type: string
                          pattern: ^[A-Za-z0-9_-]+$
                      required:
                        - payload
                  required:
                    - type
                    - data
                - &ref_10
                  title: SignJWT
                  type: object
                  properties:
                    type:
                      enum:
                        - JWT
                    data:
                      type: object
                      properties:
                        header:
                          description: >-
                            header fields to be added to the JWS header. "alg"
                            and "kid" will be ignored since they are
                            automatically added by the wallet.
                          type: object
                          additionalProperties: true
                        payload:
                          description: >-
                            A JSON object to be signed by the wallet. It will
                            become the payload of the generated JWS. 'iss'
                            (issuer) and 'iat' (issued at) will be automatically
                            added by the wallet and will override provided
                            values.
                          type: object
                          additionalProperties: true
                      required:
                        - payload
                  required:
                    - type
                    - data
      responses:
        '200':
          description: Signed data
          content:
            application/json:
              schema: &ref_11
                title: SignOutput
                type: object
                properties:
                  signature:
                    type: string
                required:
                  - signature
  /identities/{did}/info:
    get:
      summary: Gets extra information of an identity.
      operationId: identityInfo
      x-eov-operation-handler: identities
      tags:
        - identities
      parameters:
        - in: path
          name: did
          schema: *ref_0
          required: true
      responses:
        '200':
          description: Identity data
          content:
            application/json:
              schema: &ref_26
                title: Identity Data
                type: object
                properties:
                  did:
                    type: string
                    example: >-
                      did:ethr:i3m:0x03142f480f831e835822fc0cd35726844a7069d28df58fb82037f1598812e1ade8
                  alias:
                    type: string
                    example: identity1
                  provider:
                    type: string
                    example: did:ethr:i3m
                  addresses:
                    type: array
                    items: &ref_3
                      title: Ethereum Address
                      type: string
                      pattern: ^0x([0-9A-Fa-f]){40}$
                      example: '0x71C7656EC7ab88b098defB751B7401B5f6d8976F'
                    example:
                      - '0x8646cAcF516de1292be1D30AB68E7Ea51e9B1BE7'
                required:
                  - did
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
  /identities/{did}/deploy-tx:
    post:
      summary: Signs and deploys a transaction
      operationId: identityDeployTransaction
      x-eov-operation-handler: identities
      tags:
        - identities
      parameters:
        - in: path
          name: did
          schema: *ref_0
          required: true
      requestBody:
        description: Transaction to sign and deploy
        required: true
        content:
          application/json:
            schema: *ref_2
      responses:
        '200':
          description: Selected identity
          content:
            application/json:
              schema: &ref_12
                title: Receipt
                type: object
                properties:
                  receipt:
                    type: string
                required:
                  - receipt
  /resources:
    get:
      summary: >-
        Lists the resources that match the filter specified in the query
        parameters.
      operationId: resourceList
      x-eov-operation-handler: resources
      tags:
        - resources
      parameters:
        - in: query
          name: type
          example: Contract
          schema: &ref_22
            type: string
            enum:
              - VerifiableCredential
              - Object
              - Contract
              - NonRepudiationProof
          description: Filter the resources by resource type.
        - in: query
          name: identity
          example: ''
          allowEmptyValue: true
          schema: *ref_0
          description: >-
            Filter the resource associated to an identity DID. Send empty value
            to get all the resources that are not associated to any identity.
      responses:
        '200':
          description: >-
            A paged array of resources. Only the props requested will be
            returned. Security policies may prevent some props from being
            returned.
          content:
            application/json:
              schema: &ref_16
                title: ResourceListOutput
                description: A list of resources
                type: array
                items: &ref_5
                  title: Resource
                  anyOf:
                    - &ref_17
                      title: VerifiableCredential
                      type: object
                      properties:
                        type:
                          example: VerifiableCredential
                          enum:
                            - VerifiableCredential
                        parentResource:
                          type: string
                        identity: *ref_0
                        resource:
                          type: object
                          properties:
                            '@context':
                              type: array
                              items:
                                type: string
                              example:
                                - https://www.w3.org/2018/credentials/v1
                            id:
                              type: string
                              example: http://example.edu/credentials/1872
                            type:
                              type: array
                              items:
                                type: string
                              example:
                                - VerifiableCredential
                            issuer:
                              type: object
                              properties:
                                id: *ref_0
                              additionalProperties: true
                              required:
                                - id
                            issuanceDate:
                              type: string
                              format: date-time
                              example: '2021-06-10T19:07:28.000Z'
                            credentialSubject:
                              type: object
                              properties:
                                id: *ref_0
                              required:
                                - id
                              additionalProperties: true
                            proof:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - JwtProof2020
                              required:
                                - type
                              additionalProperties: true
                          additionalProperties: true
                          required:
                            - '@context'
                            - type
                            - issuer
                            - issuanceDate
                            - credentialSubject
                            - proof
                      required:
                        - type
                        - resource
                    - &ref_18
                      title: ObjectResource
                      type: object
                      properties:
                        type:
                          example: Object
                          enum:
                            - Object
                        parentResource:
                          type: string
                        identity: *ref_0
                        resource:
                          type: object
                          additionalProperties: true
                      required:
                        - type
                        - resource
                    - &ref_19
                      title: Contract
                      type: object
                      properties:
                        type:
                          type: string
                          example: Contract
                          enum:
                            - Contract
                        parentResource:
                          type: string
                        identity: *ref_0
                        resource: &ref_28
                          type: object
                          required:
                            - dataOfferingDescription
                            - parties
                            - purpose
                            - duration
                            - intendedUse
                            - licenseGrant
                            - dataStream
                            - personalData
                            - pricingModel
                            - dataExchangeAgreement
                            - signatures
                          properties:
                            dataOfferingDescription:
                              type: object
                              required:
                                - dataOfferingId
                                - dataOfferingVersion
                                - active
                              properties:
                                dataOfferingId:
                                  type: string
                                version:
                                  type: integer
                                category:
                                  type: string
                                active:
                                  type: boolean
                                title:
                                  type: string
                            parties:
                              type: object
                              required:
                                - providerDid
                                - consumerDid
                              properties:
                                providerDid: *ref_0
                                consumerDid: *ref_0
                            purpose:
                              type: string
                            duration:
                              type: object
                              required:
                                - creationDate
                                - startDate
                                - endDate
                              properties:
                                creationDate:
                                  type: integer
                                startDate:
                                  type: integer
                                endDate:
                                  type: integer
                            intendedUse:
                              type: object
                              required:
                                - processData
                                - shareDataWithThirdParty
                                - editData
                              properties:
                                processData:
                                  type: boolean
                                shareDataWithThirdParty:
                                  type: boolean
                                editData:
                                  type: boolean
                            licenseGrant:
                              type: object
                              required:
                                - transferable
                                - exclusiveness
                                - paidUp
                                - revocable
                                - processing
                                - modifying
                                - analyzing
                                - storingData
                                - storingCopy
                                - reproducing
                                - distributing
                                - loaning
                                - selling
                                - renting
                                - furtherLicensing
                                - leasing
                              properties:
                                transferable:
                                  type: boolean
                                exclusiveness:
                                  type: boolean
                                paidUp:
                                  type: boolean
                                revocable:
                                  type: boolean
                                processing:
                                  type: boolean
                                modifying:
                                  type: boolean
                                analyzing:
                                  type: boolean
                                storingData:
                                  type: boolean
                                storingCopy:
                                  type: boolean
                                reproducing:
                                  type: boolean
                                distributing:
                                  type: boolean
                                loaning:
                                  type: boolean
                                selling:
                                  type: boolean
                                renting:
                                  type: boolean
                                furtherLicensing:
                                  type: boolean
                                leasing:
                                  type: boolean
                            dataStream:
                              type: boolean
                            personalData:
                              type: boolean
                            pricingModel:
                              type: object
                              required:
                                - basicPrice
                                - currency
                                - hasFreePrice
                              properties:
                                paymentType:
                                  type: string
                                pricingModelName:
                                  type: string
                                basicPrice:
                                  type: number
                                  format: float
                                currency:
                                  type: string
                                fee:
                                  type: number
                                  format: float
                                hasPaymentOnSubscription:
                                  type: object
                                  properties:
                                    paymentOnSubscriptionName:
                                      type: string
                                    paymentType:
                                      type: string
                                    timeDuration:
                                      type: string
                                    description:
                                      type: string
                                    repeat:
                                      type: string
                                    hasSubscriptionPrice:
                                      type: integer
                                hasFreePrice:
                                  type: object
                                  properties:
                                    hasPriceFree:
                                      type: boolean
                            dataExchangeAgreement: &ref_27
                              type: object
                              required:
                                - orig
                                - dest
                                - encAlg
                                - signingAlg
                                - hashAlg
                                - ledgerContractAddress
                                - ledgerSignerAddress
                                - pooToPorDelay
                                - pooToPopDelay
                                - pooToSecretDelay
                              properties:
                                orig: *ref_0
                                dest: *ref_0
                                encAlg:
                                  type: string
                                signingAlg:
                                  type: string
                                hashAlg:
                                  type: string
                                ledgerContractAddress: *ref_3
                                ledgerSignerAddress: *ref_3
                                pooToPorDelay:
                                  type: integer
                                pooToPopDelay:
                                  type: integer
                                pooToSecretDelay:
                                  type: integer
                            signatures:
                              type: object
                              required:
                                - providerSignature
                                - consumerSignature
                              properties:
                                providerSignature: &ref_4
                                  title: CompactJWS
                                  type: string
                                  pattern: >-
                                    ^[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+$
                                consumerSignature: *ref_4
                      required:
                        - type
                        - resource
                    - &ref_20
                      title: NonRepudiationProof
                      type: object
                      properties:
                        type:
                          type: string
                          example: Contract
                          enum:
                            - NonRepudiationProof
                        parentResource:
                          type: string
                        identity: *ref_0
                        resource:
                          type: object
                          additionalProperties: true
                      required:
                        - type
                        - resource
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
    post:
      summary: Create a resource
      operationId: resourceCreate
      x-eov-operation-handler: resources
      tags:
        - resources
      requestBody:
        description: >-
          Create a resource. Nowadays it only supports storage of verifiable
          credentials.
        content:
          application/json:
            schema: *ref_5
      responses:
        '201':
          description: the ID and type of the created resource
          content:
            application/json:
              schema: &ref_21
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
  /disclosure/{jwt}:
    get:
      summary: Request selective disclosure of resources
      operationId: selectiveDisclosure
      x-eov-operation-handler: disclosure
      tags:
        - selectiveDisclosure
      parameters:
        - in: path
          name: jwt
          schema:
            type: string
            pattern: ^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$
          required: true
          description: "A JWT containing a selective disclosure object. The payload MUST contain:\n\n```json\n{\n  \"type\": \"selectiveDisclosureReq\", // MUST be selectiveDisclosureReq\n  \"iss\": \"did:\", // the DID of the OIDC Provider\n  \"aud\": \"\", // DID of the OIDC RP\n  \"iat\": 4354535,\t// The time of issuance\n  \"exp\": 3452345, // [OPTIONAL] Expiration time of JWT\n  callback: \"https://...\", // Callback URL for returning the response to a request\n  resources: [\n    { \"id\": \"id\", \"mandatory\": true, \"iss\": [ { did: or url:} ], \"reason\": \"\" }\n  ]\n}\n```\n"
      responses:
        '200':
          description: Disclosure ok (mandatory claims provided)
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
  /transaction/deploy:
    post:
      summary: Deploy a signed transaction
      operationId: transactionDeploy
      x-eov-operation-handler: transaction
      tags:
        - transaction
      requestBody:
        description: Create a resource.
        content:
          application/json:
            schema: &ref_23
              title: SignedTransaction
              description: A list of resources
              type: object
              properties:
                transaction:
                  type: string
                  pattern: ^0x(?:[A-Fa-f0-9])+$
      responses:
        '200':
          description: Deployment OK
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
  /did-jwt/verify:
    post:
      summary: >
        Use the wallet to verify a JWT. The Wallet only supports DID issuers and
        the 'ES256K1' algorithm. Useful to verify JWT created by another wallet
        instance.
      operationId: didJwtVerify
      x-eov-operation-handler: did-jwt
      tags:
        - utils
      requestBody:
        description: >-
          Verify a JWT resolving the public key from the signer DID and
          optionally check values for expected payload claims
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jwt:
                  type: string
                  pattern: ^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$
                  example: >-
                    eyJhbGciOiJFUzI1NksiLCJ0eXAiOiJKV1QifQ.eyJmaWVsZDEiOiJzYWRzYWQ3NSIsImZpZWxkMiI6ImFmZnNhczlmODdzIiwiaXNzIjoiZGlkOmV0aHI6aTNtOjB4MDNmOTcwNjRhMzUzZmFmNWRkNTQwYWE2N2I2OTE2YmY1NmMwOWM1MGNjODAzN2E0NTNlNzg1ODdmMjdmYjg4ZTk0IiwiaWF0IjoxNjY1NDAwMzYzfQ.IpQ7WprvDMk6QWcJXuPBazat-2657dWIK-iGvOOB5oAhAmMqDBm8OEtKordqeqcEWwhWw_C7_ziMMZkPz1JIkw
                expectedPayloadClaims:
                  type: object
                  additionalProperties: true
                  description: >
                    The expected values of the proof's payload claims. An
                    expected value of '' can be used to just check that the
                    claim is in the payload. An example could be:


                    ```json

                    {
                      iss: 'orig',
                      exchange: {
                        id: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',
                        orig: '{"kty":"EC","x":"rPMP39e-o8cU6m4WL8_qd2wxo-nBTjWXZtPGBiiGCTY","y":"0uvxGEebFDxKOHYUlHREzq4mRULuZvQ6LB2I11yE1E0","crv":"P-256"}', // Public key in JSON.stringify(JWK) of the block origin (sender)
                        dest: '{"kty":"EC","x":"qf_mNdy57ia1vAq5QLpTPxJUCRhS2003-gL0nLcbXoA","y":"H_8YwSCKJhDbZv17YEgDfAiKTaQ8x0jpLYCC2myxAeY","crv":"P-256"}', // Public key in JSON.stringify(JWK) of the block destination (receiver)
                        hash_alg: 'SHA-256',
                        cipherblock_dgst: 'IBUIstf98_afbiuh7UaifkasytNih7as-Jah61ls9UI', // hash of the cipherblock in base64url with no padding
                        block_commitment: '', // hash of the plaintext block in base64url with no padding
                        secret_commitment: '' // hash of the secret that can be used to decrypt the block in base64url with no padding
                      }
                    }

                    ```
              required:
                - jwt
      responses:
        '200':
          description: >
            A verification object. If `verification` equals `success` all
            checkings have passed; if it is `failed`, you can access the error
            message in `error`. Unless the JWT decoding fails (invalid format),
            the decoded JWT payload can be accessed in `payload`.


            Example of success:


            ```json

            {
              "verification": "success",
              "payload": {
                "iss": "did:ethr:i3m:0x02d846307c9fd53106eb20db5a774c4b71f25c59c7bc423990f942e3fdb02c5898",
                "iat": 1665138018,
                "action": "buy 1457adf6"
              }
            }

            ```


            Example of failure:


            ```json

            {
              "verification": "failed",
              "error": "invalid_jwt: JWT iss is required"
              "payload": {
                "iat": 1665138018,
                "action": "buy 1457adf6"
              }
            }

            ```
          content:
            application/json:
              schema: &ref_24
                title: VerificationOutput
                type: object
                properties:
                  verification:
                    type: string
                    enum:
                      - success
                      - failed
                    description: whether verification has been successful or has failed
                  error:
                    type: string
                    description: error message if verification failed
                  decodedJwt:
                    description: the decoded JWT
                required:
                  - verification
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
  /providerinfo:
    get:
      summary: Gets info of the DLT provider the wallet is using
      operationId: providerinfoGet
      x-eov-operation-handler: providerinfo
      tags:
        - utils
      responses:
        '200':
          description: A JSON object with information of the DLT provider currently in use.
          content:
            application/json:
              schema: &ref_25
                title: ProviderData
                description: >-
                  A JSON object with information of the DLT provider currently
                  in use.
                type: object
                properties:
                  provider:
                    type: string
                    example: did:ethr:i3m
                  network:
                    type: string
                    example: i3m
                  rpcUrl:
                    type: string
                    example: http://95.211.3.250:8545
                additionalProperties: true
        default:
          description: unexpected error
          content:
            application/json:
              schema: *ref_1
components:
  schemas:
    IdentitySelectOutput: *ref_6
    SignInput: *ref_7
    SignRaw: *ref_8
    SignTransaction: *ref_9
    SignJWT: *ref_10
    Transaction: *ref_2
    SignOutput: *ref_11
    Receipt: *ref_12
    SignTypes:
      title: SignTypes
      type: string
      enum:
        - Transaction
        - Raw
        - JWT
    IdentityListInput: *ref_13
    IdentityCreateInput: *ref_14
    IdentityCreateOutput: *ref_15
    ResourceListOutput: *ref_16
    Resource: *ref_5
    VerifiableCredential: *ref_17
    ObjectResource: *ref_18
    Contract: *ref_19
    NonRepudiationProof: *ref_20
    ResourceId: *ref_21
    ResourceType: *ref_22
    SignedTransaction: *ref_23
    DecodedJwt:
      title: JwtPayload
      type: object
      properties:
        header:
          type: object
          properties:
            typ:
              type: string
              enum:
                - JWT
            alg:
              type: string
              enum:
                - ES256K
          required:
            - typ
            - alg
          additionalProperties: true
        payload:
          type: object
          properties:
            iss: *ref_0
          required:
            - iss
          additionalProperties: true
        signature:
          type: string
          format: ^[A-Za-z0-9_-]+$
        data:
          type: string
          format: ^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$
          description: <base64url(header)>.<base64url(payload)>
      required:
        - signature
        - data
    VerificationOutput: *ref_24
    ProviderData: *ref_25
    EthereumAddress: *ref_3
    did: *ref_0
    IdentityData: *ref_26
    ApiError: *ref_1
    CompactJWS: *ref_4
    dataExchangeAgreement: *ref_27
    dataSharingAgreement: *ref_28
