openapi: '3.0.3'

info:
  version: 1.0.0
  title: i3M Wallet API

paths:
  /accounts:
    get:
      summary: List all accounts or selected accounts
      operationId: accountList
      x-eov-operation-handler: accounts
      tags:
        - accounts
      parameters:
        - name: account_ids
          in: query
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          required: false
          allowReserved: true
        - name: props
          in: query
          description: a comma-separated list of props to retrieve from the account. Props differ depending on the type of account ('identity' or 'secret')
          schema:
            type: array
            items:
              type: string
            default: ['id', 'type', 'name']
          style: form
          explode: false
          required: false
          allowReserved: true
      responses:
        "200":
          description: A paged array of accounts. Only the props requested will be returned. Security policies may prevent some props from being returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountListOutput"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "../schema/error.yaml#/components/schemas/ApiError"

    post:
      summary: Create an account
      operationId: accountCreate
      x-eov-operation-handler: accounts
      tags:
        - accounts
      requestBody:
        description: Creation option. Whether an 'identity' or a 'secret', an optional name and comment, and addtional wallet-provider's specific options
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateInput"
      responses:
        "201":
          description: the ID and type of the created account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCreateOutput"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "../schema/error.yaml#/components/schemas/ApiError"

  /accounts/decrypt:
    post:
      summary: decrypt the input
      operationId: accountDecrypt
      x-eov-operation-handler: accounts
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountDecryptInput"
      responses:
        "200":
          description: An object containing the base64url-encoded decrypted plaintext
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDecryptOutput"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "../schema/error.yaml#/components/schemas/ApiError"

  /accounts/encrypt:
    post:
      summary: encrypt the input
      operationId: accountEncrypt
      x-eov-operation-handler: accounts
      tags:
        - accounts
      requestBody:
        description: |
          An object containing:
          - `accountId`: [OPTIONAL] if accountId is set, it will be used; otherwise, the end user will have to interactively select one account.
          - `input`: base64url-encoded versions of the plaintext to encrypt, and an optional iv (random one will be chosen if not provided).
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountEncryptInput"
      responses:
        "200":
          description: An object containing the base64url-encoded ciphertext.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountEncryptOutput"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "../schema/error.yaml#/components/schemas/ApiError"

  /accounts/sign:
    post:
      summary: sign the input
      operationId: accountSign
      x-eov-operation-handler: accounts
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountSignInput"
      responses:
        "200":
          description: An object containing the a JSON serialization of a JWS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSignOutput"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "../schema/error.yaml#/components/schemas/ApiError"

  /accounts/verify:
    post:
      summary: verify a signature
      operationId: accountVerify
      x-eov-operation-handler: accounts
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountVerifyInput"
      responses:
        "200":
          description: An object containing whether the signature has been verified or not.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountVerifyOutput"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "../schema/error.yaml#/components/schemas/ApiError"

components:
  parameters:
    callbackUriQuery:
      in: query
      name: cb
      description: |
        Callback URI where to POST the result.
        If it is provided, the results will be POSTed to the provided `cb`
        It SHOULD match the `callback_uri` registered in the i3m-Wallet Provider when instanciated.
      required: false
      schema:
        type: string
        format: uri
      
  schemas:
    AccountCreateInput:
      title: AccountCreateInput
      description: |
        Besides the here defined options, provider specific properties should be added here if necessary, e.g. "path" for BIP21 wallets, or the key algorithm (if the wallet supports multiple algorithm).
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AccountType"
          default: Identity
        name:
          type: string
        comment:
          type: string
      additionalProperties: true
    
    AccountCreateOutput:
      title: AccountCreateOutput
      description: |
        It returns the account id and type
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AccountType"
        id:
          type: string
      additionalProperties: true
      required:
        - type
        - id
    
    AccountDecryptInput:
      title: AccountDecryptInput
      description: |
        An object containing:
        - `accountId`: [OPTIONAL] if accountId is set, it will be used; otherwise, the end user will have to interactively select one account.
        - `ciphertext`: an object containing base64url-encoded versions of the ciphertext, and the iv used to encrypt it (if used).
      type: object
      properties:
        accountId:
          $ref: "#/components/schemas/AccountId"
        ciphertext:
          $ref: "../schema/jwk.yaml#/components/schemas/JWEFlattenedJSON"
      required:
        - ciphertext
    
    AccountDecryptOutput:
      title: AccountDecryptOutput
      type: string
      pattern: ^[A-Za-z0-9_-]+$
      description: The decrypted message Base64Url

    AccountEncryptInput:
      title: AccountEncryptInput
      description: |
        An object containing:
        - `accountId`: [OPTIONAL] if accountId is set, it will be used; otherwise, the end user will have to interactively select one account.
        - `input`: base64url-encoded versions of the plaintext to encrypt, and an optional iv (random one will be chosen if not provided).
      type: object
      properties:
        accountId:
          $ref: "#/components/schemas/AccountId"
        encryptInput:
          type: object
          properties:
            plaintext:
              type: string
              pattern: ^[A-Za-z0-9_-]+$
              description: the plaintext to be encrypted in Base64Url
            iv:
              type: string
              pattern: ^[A-Za-z0-9_-]+$
              description: OPTIONAL. Base64Url-encoded iv to use for encryption (if required)
          required:
            - plaintext
      required:
        - encryptInput
    
    AccountEncryptOutput:
      title: AccountEncryptOutput
      allOf:
        - $ref: "../schema/jwk.yaml#/components/schemas/JWEFlattenedJSON"

    # TODO: Why are we not using this component??
    AccountListInput:
      title: AccountListInput
      type: object
      properties:
        account_ids:
          type: array
          items:
            type: string
        props:
          description: a comma-separated list of props to retrieve from the account besides the account id. Props differ depending on the type of account ('identity' or 'secret')
          type: array
          items:
            type: string
          default: ['type', 'name']

    AccountListOutput:
      title: AccountListOutput
      type: array
      items:
        $ref: "#/components/schemas/Account"

    AccountSignInput:
      title: AccountSignInput
      description: |
          An object containing:
          - `accountId`: [OPTIONAL] if accountId is set, it will be used; otherwise, the end user will have to interactively select one account.
          - `messageToSign`: It can be either an plain object or a string (preferably a BASE64URL). Examples:
            `eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDpldGhyOjB4YjljNTcxNDA4OTQ3OGEzMjdmMDkxOTc5ODdmMTZmOWU1ZDkzNmU4YSNrZXktMSJ9`.
      type: object
      properties:
        accountId:
          $ref: "#/components/schemas/AccountId"
        messageToSign:
          $ref: "#/components/schemas/AccountSignInputMessageToSign"
        output:
          type: string
          enum: 
            - 'raw'
            - 'jws'
          default: 'raw'
      required:
        - messageToSign
    
    AccountSignInputMessageToSign:
      title: AccountSignInputMessageToSign
      oneOf:
        - type: object
          description: an object to sign
          additionalProperties: true
          example: { msg: 'hello new world', date: '2050-01-01' }
        - type: string
          pattern: ^[A-Za-z0-9_-]+$
          description: base64url-encoded binary stream
          example: 'SGVsbG8gV29ybGQ'

    AccountSignOutput:
      title: AccountSignOutput
      allOf:
        - $ref: "#/components/schemas/Signature"

    AccountVerifyInput:
      title: AccountVerifyInput
      description: |
          An object containing:
          - `accountId`: [OPTIONAL] if accountId is set, it will be used; otherwise, the end user will have to interactively select one account.
          - `signature`: either a JWS JSON serialized object or a base64url-encoded binary stream
      type: object
      properties:
        accountId:
          $ref: "#/components/schemas/AccountId"
        signature:
          $ref: "#/components/schemas/Signature"
      required:
        - signature
    
    AccountVerifyOutput:
      title: AccountVerifyOutput
      type: object
      properties:
        verified:
          type: boolean
      required:
        - verified
      description: whether the signature was properly verified (true) or not (false).
    
    AccountId:
      title: AccountId
      type: string
      example: "m/44'/60'/0'/0/2"

    AccountType:
      title: AccountType
      type: string
      enum:
        - Identity
        - Secret
    
    Account:
      title: Account
      type: object
      properties:
        id:
          $ref: "#/components/schemas/AccountId"
        name:
          type: string
        description:
          type: string
        type: 
          $ref: "#/components/schemas/AccountType"
        key:
          $ref: "../schema/jwk.yaml#/components/schemas/JWK"
      additionalProperties: true
      discriminator:
        propertyName: type
      required:
        - id

    Identity:
      title: Identity
      allOf:
        - $ref: "#/components/schemas/Account"
        - type: object
          properties:
            publicKey:
              $ref: "../schema/jwk.yaml#/components/schemas/JWK"
              example: { "alg":"RSA", "mod": "0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMstn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbISD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqbw0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw", "exp":"AQAB", "kid":"2011-04-29" }

    Secret:
      title: Secret
      allOf:
        - $ref: "#/components/schemas/Account"

    Signature:
      title: Signature
      oneOf:
        - $ref: "../schema/jwk.yaml#/components/schemas/JWSFlattenedJSON"
        - type: string
          pattern: ^[A-Za-z0-9_-]+$
          description: base64url-encoded binary stream