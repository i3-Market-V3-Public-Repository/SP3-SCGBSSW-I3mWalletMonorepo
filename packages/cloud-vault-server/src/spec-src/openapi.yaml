openapi: '3.0.3'
info:
  title: i3M-Wallet Cloud-Vault Server API
  version: '1.0'
paths:
  /.well-known/cvs-configuration:
    get:
      summary: the well-known configuration of this Cloud Vault Server (CVS)
      tags: 
       - 'Cloud-Vault Server: Discovery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schema/well-known-cvs-configuration.yaml#/components/schemas/CvsConfiguration'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
          
  /api/API_VERSION/registration/public-jwk:
    get:
      summary: Get the current wallet cloud-vault's public key as a JWK
      tags:
        - 'Cloud-Vault Server: Registration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                 - jwk
                properties:
                  jwk:
                    $ref: "./schema/jwk.yaml#/components/schemas/JwkEcPublicKey"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
  
  /api/API_VERSION/registration/register/{data}:
    get:
      summary: Endpoint where any non-previously registered user can register to enable the cloud vault for the i3M-Wallet.
      tags:
        - 'Cloud-Vault Server: Registration'
      parameters:
        - name: data
          in: path
          required: true
          schema:
            $ref: "./schema/registration.yaml#/components/schemas/RegistrationData"
      responses:
        '302':
          description: oidc
          headers:
            Set-Cookie:
              description: Cookies
              schema:
                type: string
            Location:
              description: redirect to oidc login
              schema:
                type: string
                format: uri 
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
  
  /api/API_VERSION/registration/deregister:
    get:
      summary: Endpoint where users logged in with valid credentials can deregister their registered username and associated storage. The cloud vault for that identity (DID) will be cleared, and new registration would be needed to use it again
      tags:
        - 'Cloud-Vault Server: Registration'
      responses:
        '302':
          description: oidc
          headers:
            Location:
              description: redirect to oidc login
              schema:
                type: string
                format: uri 
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
  
  /api/API_VERSION/registration/login:
    get:
      summary: Endpoint to start login proccess with the oidc server
      tags:
        - 'Cloud-Vault Server: Registration'
      responses:
        '302':
          description: oidc
          headers:
            Set-Cookie:
              description: Cookies
              schema:
                type: string
            Location:
              description: redirect to oidc login
              schema:
                type: string
                format: uri 
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"

  /api/API_VERSION/registration/cb:
    get:
      summary: Callback Endpoint for OIDC authentication.
      tags:
        - 'Cloud-Vault Server: Registration'
      security:
        - i3m:
          - vc
          - vc:provider
          - vc:consumer
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_-]+$
        - name: state
          in: query
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_-]+$
      responses:
        '201':
          description: OK
          headers:
            Set-Cookie:
              description: Cookies
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "./schema/registration.yaml#/components/schemas/RegistrationResponse"
        '204':
          description: Vault for logged in identity has been cleared
          headers:
            Set-Cookie:
              description: Cookies
              schema:
                type: string
        '409':
          description: user already registered
          headers:
            Set-Cookie:
              description: Cookies
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorAlreadyRegistered"
        '404':
          description: the identity requesting to delete her/his vault has not previously registered to have one
          headers:
            Set-Cookie:
              description: Cookies
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorNotRegistered"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"

  /api/API_VERSION/vault/token:
    post:
      summary: |
        The endpoint to get a valid bearer token to access the vault. Valid credentials (`username`, `authkey`) must be provided.
      tags:
        - 'Cloud-Vault Server: Vault'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schema/vault.yaml#/components/schemas/AuthorizationRequest"
      responses:
        '200':
          description: returns a bearer token that can be used to access this user's vault
          content:
            application/json:
              schema:
                $ref: "./schema/vault.yaml#/components/schemas/AuthToken"
        '404':
          description: invalid username and/or authkey
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorInvalidCredentials"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"

  /api/API_VERSION/vault/events:
    get:
      summary: |
        A notification channel using Server-Sent Events for vault changes. Everytime there is a change the timestamp of the change is broadcasted to all clients authenticated with the same user that updated it.
        This is here just for documenting the Server-Sent Events (SSE) endpoint. It cannot be tested nor connected with automated tooling since it is NOT SUPPORTED in OpenAPI 3.0
      tags:
        - 'Cloud-Vault Server: Vault'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: |
            Every time the encrypted storage is updated all subscribed clients receive a notification such as the following:
            `data: {"timestamp":1674119447057}`
            with `timestamp` (in milliseconds elapsed since the epoch) referring to the exact time the latest storage was registered in the cloud vault.
          x-produces: ["text/event-stream"]
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - "text/event-stream"
        '401':
          description: missing, invalid or expired token
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorUnauthorized"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"

  /api/API_VERSION/vault/timestamp:
    get:
      summary: |
        Get the timestamp when latest storage was uploaded to the cloud vault
      tags:
        - 'Cloud-Vault Server: Vault'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schema/vault.yaml#/components/schemas/Timestamp"
        '404':
          description: no cloud storage
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorNoStorage"
        '401':
          description: missing, invalid or expired token
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorUnauthorized"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
  
  /api/API_VERSION/vault:
    get:
      summary: |
        Get the latest storage in vault
      tags:
        - 'Cloud-Vault Server: Vault'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "./schema/vault.yaml#/components/schemas/EncryptedStorage"
                  - required:
                    - ciphertext
                    - timestamp
        '404':
          description: no cloud storage
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorNoStorage"
        '401':
          description: missing, invalid or expired token
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorUnauthorized"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
    delete:
      summary: |
        Delete all data stored in the cloud vault
      tags:
        - 'Cloud-Vault Server: Vault'
      security:
        - bearerAuth: []
      responses:
        '204':
          description: data deleted
        '404':
          description: username not registered
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorNotRegistered"
        '401':
          description: missing, invalid or expired token
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorUnauthorized"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
    post:
      summary: |
        Sets/updates encrypted storage in cloud vault
      tags:
        - 'Cloud-Vault Server: Vault'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schema/vault.yaml#/components/schemas/EncryptedStorage"
      responses:
        '201':
          description: returns the timestamp when the new encrypted storage has been registered in the cloud vault
          content:
            application/json:
              schema:
                $ref: "./schema/vault.yaml#/components/schemas/Timestamp"
        '400':
          description: error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "./schema/api-error.yaml#/components/schemas/ErrorQuotaExceeded"
                  - $ref: "./schema/api-error.yaml#/components/schemas/ErrorNotRegistered"
                  - $ref: "./schema/api-error.yaml#/components/schemas/ApiError"
        '401':
          description: missing, invalid or expired token
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ErrorUnauthorized"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "./schema/api-error.yaml#/components/schemas/ApiError"

components:
  securitySchemes:
    i3m:  # the i3-market SSI authentication
      type: openIdConnect
      openIdConnectUrl: OIDC_PROVIDER_URI/.well-known/openid-configuration
    
    bearerAuth:  # This server's HTTP bearer authentication (using JWT)
      type: http
      scheme: bearer
      bearerFormat: JWT  # [optional] only for documentation purposes
