var walletProtocolApi=function(e){"use strict";class t{constructor(e){this.api=e}async list(e){return await this.api.executeQuery({path:"/identities",method:"GET"},void 0,e,void 0)}async select(e){return await this.api.executeQuery({path:"/identities/select",method:"GET"},void 0,e,void 0)}async create(e){return await this.api.executeQuery({path:"/identities",method:"POST",headers:{"Content-Type":"application/json"}},void 0,void 0,e)}async sign(e,t){return await this.api.executeQuery({path:"/identities/{did}/sign",method:"POST",headers:{"Content-Type":"application/json"}},e,void 0,t)}async info(e){return await this.api.executeQuery({path:"/identities/{did}/info",method:"GET"},e,void 0,void 0)}async deployTransaction(e,t){return await this.api.executeQuery({path:"/identities/{did}/deploy-tx",method:"POST"},e,void 0,t)}}class i{constructor(e){this.api=e}async list(){return await this.api.executeQuery({path:"/resources",method:"GET"},void 0,void 0,void 0)}async create(e){return await this.api.executeQuery({path:"/resources",method:"POST",headers:{"Content-Type":"application/json"}},void 0,void 0,e)}}class s{constructor(e){this.api=e}async disclose(e){return await this.api.executeQuery({path:"/disclosure/{jwt}",method:"GET"},e,void 0,void 0)}}class o{constructor(e){this.api=e}async deploy(e){return await this.api.executeQuery({path:"/transaction/deploy",method:"POST"},void 0,void 0,e)}}class a{constructor(e){this.api=e}async verify(e){return await this.api.executeQuery({path:"/did-jwt/verify",method:"POST"},void 0,void 0,e)}}class r{constructor(e){this.api=e}async get(){return await this.api.executeQuery({path:"/providerinfo",method:"GET"},void 0,void 0,void 0)}}return e.WalletApi=class{constructor(e){this.session=e,this.identities=new t(this),this.transaction=new o(this),this.resources=new i(this),this.disclosure=new s(this),this.didJwt=new a(this),this.providerinfo=new r(this)}async executeQuery(e,t,i,s){let o,a="";void 0!==i&&(a="?"+Object.keys(i).map((e=>`${encodeURIComponent(e)}=${encodeURIComponent(i[e])}`)).join("&")),void 0!==s&&(o=JSON.stringify(s));let r=e.path+a;if(void 0!==t)for(const[e,i]of Object.entries(t))r=r.replace(`{${e}}`,i);const n=await this.session.send({url:r,init:{headers:e.headers,method:e.method,body:o}});return JSON.parse(n.body)}},Object.defineProperty(e,"__esModule",{value:!0}),e}({});
