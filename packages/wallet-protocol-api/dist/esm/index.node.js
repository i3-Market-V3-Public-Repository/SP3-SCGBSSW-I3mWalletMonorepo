class e{constructor(e){this.api=e}async list(e){const t=await this.api.executeQuery({path:"/identities",method:"GET"},void 0,e,void 0);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}async select(e){const t=await this.api.executeQuery({path:"/identities/select",method:"GET"},void 0,e,void 0);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}async create(e){const t=await this.api.executeQuery({path:"/identities",method:"POST",headers:{"Content-Type":"application/json"}},void 0,void 0,e);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}async sign(e,t){const i=await this.api.executeQuery({path:"/identities/{did}/sign",method:"POST",headers:{"Content-Type":"application/json"}},e,void 0,t);if(void 0!==i.code)throw new Error(`${i.code}: ${i.message}`);return i}async info(e){const t=await this.api.executeQuery({path:"/identities/{did}/info",method:"GET"},e,void 0,void 0);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}async deployTransaction(e,t){const i=await this.api.executeQuery({path:"/identities/{did}/deploy-tx",method:"POST"},e,void 0,t);if(void 0!==i.code)throw new Error(`${i.code}: ${i.message}`);return i}}class t{constructor(e){this.api=e}async list(e){const t=await this.api.executeQuery({path:"/resources",method:"GET"},void 0,e,void 0);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}async create(e){const t=await this.api.executeQuery({path:"/resources",method:"POST",headers:{"Content-Type":"application/json"}},void 0,void 0,e);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}}class i{constructor(e){this.api=e}async disclose(e){const t=await this.api.executeQuery({path:"/disclosure/{jwt}",method:"GET"},e,void 0,void 0);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}}class o{constructor(e){this.api=e}async deploy(e){const t=await this.api.executeQuery({path:"/transaction/deploy",method:"POST"},void 0,void 0,e);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}}class s{constructor(e){this.api=e}async verify(e){const t=await this.api.executeQuery({path:"/did-jwt/verify",method:"POST"},void 0,void 0,e);if(void 0!==t.code)throw new Error(`${t.code}: ${t.message}`);return t}}class r{constructor(e){this.api=e}async get(){const e=await this.api.executeQuery({path:"/providerinfo",method:"GET"},void 0,void 0,void 0);if(void 0!==e.code)throw new Error(`${e.code}: ${e.message}`);return e}}class d{constructor(d){this.session=d,this.identities=new e(this),this.transaction=new o(this),this.resources=new t(this),this.disclosure=new i(this),this.didJwt=new s(this),this.providerinfo=new r(this)}async executeQuery(e,t,i,o){let s,r="";void 0!==i&&(r="?"+Object.keys(i).map((e=>`${encodeURIComponent(e)}=${encodeURIComponent(i[e])}`)).join("&")),void 0!==o&&(s=JSON.stringify(o));let d=e.path+r;if(void 0!==t)for(const[e,i]of Object.entries(t))d=d.replace(`{${e}}`,i);const a=await this.session.send({url:d,init:{headers:e.headers,method:e.method,body:s}});return JSON.parse(a.body)}}export{d as WalletApi};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubm9kZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RzL21vZGVscy9pZGVudGl0aWVzLnRzIiwiLi4vLi4vc3JjL3RzL21vZGVscy9yZXNvdXJjZXMudHMiLCIuLi8uLi9zcmMvdHMvbW9kZWxzL2Rpc2Nsb3N1cmUudHMiLCIuLi8uLi9zcmMvdHMvbW9kZWxzL3RyYW5zYWN0aW9uLnRzIiwiLi4vLi4vc3JjL3RzL21vZGVscy9kaWQtand0LnRzIiwiLi4vLi4vc3JjL3RzL21vZGVscy9wcm92aWRlcmluZm8udHMiLCIuLi8uLi9zcmMvdHMvYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpudWxsLCJuYW1lcyI6WyJJZGVudGl0aWVzQXBpIiwiY29uc3RydWN0b3IiLCJhcGkiLCJ0aGlzIiwiYXN5bmMiLCJxdWVyeVBhcmFtcyIsInJlc3BvbnNlIiwiZXhlY3V0ZVF1ZXJ5IiwicGF0aCIsIm1ldGhvZCIsInVuZGVmaW5lZCIsImNvZGUiLCJFcnJvciIsIm1lc3NhZ2UiLCJib2R5IiwiaGVhZGVycyIsInBhdGhQYXJhbXMiLCJSZXNvdXJjZXNBcGkiLCJvcHRpb25zIiwiRGlzY2xvc3VyZUFwaSIsIlRyYW5zYWN0aW9uQXBpIiwiRGlkSnd0QXBpIiwiUHJvdmlkZXJJbmZvQXBpIiwiV2FsbGV0QXBpIiwic2Vzc2lvbiIsImlkZW50aXRpZXMiLCJ0cmFuc2FjdGlvbiIsInJlc291cmNlcyIsImRpc2Nsb3N1cmUiLCJkaWRKd3QiLCJwcm92aWRlcmluZm8iLCJib2R5T2JqZWN0IiwicXVlcnlQYXJhbXNTdHJpbmciLCJPYmplY3QiLCJrZXlzIiwibWFwIiwia2V5IiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwiam9pbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cmwiLCJ2YWx1ZSIsImVudHJpZXMiLCJyZXBsYWNlIiwicmVzcCIsInNlbmQiLCJpbml0IiwicGFyc2UiXSwibWFwcGluZ3MiOiJNQUlhQSxFQUNYQyxZQUF1QkMsR0FBQUMsS0FBR0QsSUFBSEEsQ0FBcUIsQ0FFNUNFLFdBQVlDLEdBQ1YsTUFBTUMsUUFBaUJILEtBQUtELElBQUlLLGFBQWEsQ0FDM0NDLEtBQU0sY0FDTkMsT0FBUSxZQUNQQyxFQUFXTCxPQUF1QkssR0FDckMsUUFBNkRBLElBQXhESixFQUErQ0ssS0FDbEQsTUFBTSxJQUFJQyxNQUFNLEdBQUlOLEVBQStDSyxTQUFVTCxFQUErQ08sV0FFOUgsT0FBT1AsQ0FDUixDQUVERixhQUFjQyxHQUNaLE1BQU1DLFFBQWlCSCxLQUFLRCxJQUFJSyxhQUFhLENBQzNDQyxLQUFNLHFCQUNOQyxPQUFRLFlBQ1BDLEVBQVdMLE9BQXVCSyxHQUNyQyxRQUE2REEsSUFBeERKLEVBQStDSyxLQUNsRCxNQUFNLElBQUlDLE1BQU0sR0FBSU4sRUFBK0NLLFNBQVVMLEVBQStDTyxXQUU5SCxPQUFPUCxDQUNSLENBRURGLGFBQWNVLEdBQ1osTUFBTVIsUUFBaUJILEtBQUtELElBQUlLLGFBQWEsQ0FDM0NDLEtBQU0sY0FDTkMsT0FBUSxPQUNSTSxRQUFTLENBQUUsZUFBZ0IsMEJBQzFCTCxPQUFXQSxFQUFXSSxHQUN6QixRQUE2REosSUFBeERKLEVBQStDSyxLQUNsRCxNQUFNLElBQUlDLE1BQU0sR0FBSU4sRUFBK0NLLFNBQVVMLEVBQStDTyxXQUU5SCxPQUFPUCxDQUNSLENBRURGLFdBQVlZLEVBQXFERixHQUMvRCxNQUFNUixRQUFpQkgsS0FBS0QsSUFBSUssYUFBYSxDQUMzQ0MsS0FBTSx5QkFDTkMsT0FBUSxPQUNSTSxRQUFTLENBQUUsZUFBZ0IscUJBQzFCQyxPQUFtQk4sRUFBV0ksR0FDakMsUUFBNkRKLElBQXhESixFQUErQ0ssS0FDbEQsTUFBTSxJQUFJQyxNQUFNLEdBQUlOLEVBQStDSyxTQUFVTCxFQUErQ08sV0FFOUgsT0FBT1AsQ0FDUixDQUVERixXQUFZWSxHQUNWLE1BQU1WLFFBQWlCSCxLQUFLRCxJQUFJSyxhQUFhLENBQzNDQyxLQUFNLHlCQUNOQyxPQUFRLE9BQ1BPLE9BQW1CTixPQUFXQSxHQUNqQyxRQUE2REEsSUFBeERKLEVBQStDSyxLQUNsRCxNQUFNLElBQUlDLE1BQU0sR0FBSU4sRUFBK0NLLFNBQVVMLEVBQStDTyxXQUU5SCxPQUFPUCxDQUNSLENBRURGLHdCQUF5QlksRUFBa0VGLEdBQ3pGLE1BQU1SLFFBQWlCSCxLQUFLRCxJQUFJSyxhQUFhLENBQzNDQyxLQUFNLDhCQUNOQyxPQUFRLFFBQ1BPLE9BQW1CTixFQUFXSSxHQUNqQyxRQUE2REosSUFBeERKLEVBQStDSyxLQUNsRCxNQUFNLElBQUlDLE1BQU0sR0FBSU4sRUFBK0NLLFNBQVVMLEVBQStDTyxXQUU5SCxPQUFPUCxDQUNSLFFDckVVVyxFQUNYaEIsWUFBdUJDLEdBQUFDLEtBQUdELElBQUhBLENBQXFCLENBRTVDRSxXQUFZYyxHQUNWLE1BQU1aLFFBQWlCSCxLQUFLRCxJQUFJSyxhQUFhLENBQzNDQyxLQUFNLGFBQ05DLE9BQVEsWUFDUEMsRUFBV1EsT0FBbUJSLEdBQ2pDLFFBQTZEQSxJQUF4REosRUFBK0NLLEtBQ2xELE1BQU0sSUFBSUMsTUFBTSxHQUFJTixFQUErQ0ssU0FBVUwsRUFBK0NPLFdBRTlILE9BQU9QLENBQ1IsQ0FFREYsYUFBY1UsR0FDWixNQUFNUixRQUFpQkgsS0FBS0QsSUFBSUssYUFBYSxDQUMzQ0MsS0FBTSxhQUNOQyxPQUFRLE9BQ1JNLFFBQVMsQ0FBRSxlQUFnQiwwQkFDMUJMLE9BQVdBLEVBQVdJLEdBQ3pCLFFBQTZESixJQUF4REosRUFBK0NLLEtBQ2xELE1BQU0sSUFBSUMsTUFBTSxHQUFJTixFQUErQ0ssU0FBVUwsRUFBK0NPLFdBRTlILE9BQU9QLENBQ1IsUUN4QlVhLEVBQ1hsQixZQUF1QkMsR0FBQUMsS0FBR0QsSUFBSEEsQ0FBcUIsQ0FFNUNFLGVBQWdCWSxHQUNkLE1BQU1WLFFBQWlCSCxLQUFLRCxJQUFJSyxhQUFhLENBQzNDQyxLQUFNLG9CQUNOQyxPQUFRLE9BQ1BPLE9BQW1CTixPQUFXQSxHQUNqQyxRQUE2REEsSUFBeERKLEVBQStDSyxLQUNsRCxNQUFNLElBQUlDLE1BQU0sR0FBSU4sRUFBK0NLLFNBQVVMLEVBQStDTyxXQUU5SCxPQUFPUCxDQUNSLFFDWlVjLEVBQ1huQixZQUF1QkMsR0FBQUMsS0FBR0QsSUFBSEEsQ0FBcUIsQ0FFNUNFLGFBQWNVLEdBQ1osTUFBTVIsUUFBaUJILEtBQUtELElBQUlLLGFBQWEsQ0FDM0NDLEtBQU0sc0JBQ05DLE9BQVEsYUFDUEMsT0FBV0EsRUFBV0ksR0FDekIsUUFBNkRKLElBQXhESixFQUErQ0ssS0FDbEQsTUFBTSxJQUFJQyxNQUFNLEdBQUlOLEVBQStDSyxTQUFVTCxFQUErQ08sV0FFOUgsT0FBT1AsQ0FDUixRQ1pVZSxFQUNYcEIsWUFBdUJDLEdBQUFDLEtBQUdELElBQUhBLENBQXFCLENBRTVDRSxhQUFjVSxHQUNaLE1BQU1SLFFBQWtCSCxLQUFLRCxJQUFJSyxhQUFhLENBQzVDQyxLQUFNLGtCQUNOQyxPQUFRLGFBQ1BDLE9BQVdBLEVBQVdJLEdBQ3pCLFFBQTZESixJQUF4REosRUFBK0NLLEtBQ2xELE1BQU0sSUFBSUMsTUFBTSxHQUFJTixFQUErQ0ssU0FBVUwsRUFBK0NPLFdBRTlILE9BQU9QLENBQ1IsUUNaVWdCLEVBQ1hyQixZQUF1QkMsR0FBQUMsS0FBR0QsSUFBSEEsQ0FBcUIsQ0FFNUNFLFlBQ0UsTUFBTUUsUUFBaUJILEtBQUtELElBQUlLLGFBQWEsQ0FDM0NDLEtBQU0sZ0JBQ05DLE9BQVEsWUFDUEMsT0FBV0EsT0FBV0EsR0FDekIsUUFBNkRBLElBQXhESixFQUErQ0ssS0FDbEQsTUFBTSxJQUFJQyxNQUFNLEdBQUlOLEVBQStDSyxTQUFVTCxFQUErQ08sV0FFOUgsT0FBT1AsQ0FDUixRQ1pVaUIsRUFRWHRCLFlBQXVCdUIsR0FBQXJCLEtBQU9xQixRQUFQQSxFQUNyQnJCLEtBQUtzQixXQUFhLElBQUl6QixFQUFjRyxNQUNwQ0EsS0FBS3VCLFlBQWMsSUFBSU4sRUFBZWpCLE1BQ3RDQSxLQUFLd0IsVUFBWSxJQUFJVixFQUFhZCxNQUNsQ0EsS0FBS3lCLFdBQWEsSUFBSVQsRUFBY2hCLE1BQ3BDQSxLQUFLMEIsT0FBUyxJQUFJUixFQUFVbEIsTUFDNUJBLEtBQUsyQixhQUFlLElBQUlSLEVBQWdCbkIsS0FDekMsQ0FFTUMsbUJBQXNCRixFQUFnQmMsRUFBb0JYLEVBQXFCMEIsR0FDcEYsSUFRSWpCLEVBUkFrQixFQUFvQixRQUNKdEIsSUFBaEJMLElBQ0YyQixFQUFvQixJQUFNQyxPQUN2QkMsS0FBSzdCLEdBQ0w4QixLQUFLQyxHQUFRLEdBQUdDLG1CQUFtQkQsTUFBUUMsbUJBQW1CaEMsRUFBWStCLFFBQzFFRSxLQUFLLFdBSVM1QixJQUFmcUIsSUFDRmpCLEVBQU95QixLQUFLQyxVQUFVVCxJQUd4QixJQUFJVSxFQUFNdkMsRUFBSU0sS0FBT3dCLEVBQ3JCLFFBQW1CdEIsSUFBZk0sRUFDRixJQUFLLE1BQU9vQixFQUFLTSxLQUFVVCxPQUFPVSxRQUFRM0IsR0FDeEN5QixFQUFNQSxFQUFJRyxRQUFRLElBQUlSLEtBQVFNLEdBSWxDLE1BQU1HLFFBQWExQyxLQUFLcUIsUUFBUXNCLEtBQUssQ0FDbkNMLE1BQ0FNLEtBQU0sQ0FDSmhDLFFBQVNiLEVBQUlhLFFBQ2JOLE9BQVFQLEVBQUlPLE9BQ1pLLFVBR0osT0FBT3lCLEtBQUtTLE1BQU1ILEVBQUsvQixLQUN4QiJ9
