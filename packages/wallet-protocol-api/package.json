{
  "name": "@i3m/wallet-protocol-api",
  "version": "2.5.9",
  "description": "A TypeScript/JavaScript library that can be used to easily connect to an i3m Wallet Desktop App. It wraps all the functionalities provided by the wallet's HTTP API into convenient class methods. It works in Node.js (both ESM and CJS) and browsers.",
  "keywords": [
    "i3-market",
    "wallet",
    "i3M-Wallet"
  ],
  "license": "EUPL-1.2",
  "contributors": [
    "Fernando Román García <fernando.roman@upc.edu>",
    "Juan Hernández Serrno <j.hernandez@upc.edu>"
  ],
  "author": "Fernando Román García <fernando.roman@upc.edu>",
  "repository": {
    "type": "git",
    "url": "https://github.com/i3-Market-V2-Public-Repository/SP3-SCGBSSW-I3mWalletMonorepo.git",
    "directory": "packages/wallet-protocol-api"
  },
  "type": "module",
  "main": "./dist/index.node.cjs",
  "browser": "./dist/index.browser.esm.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "node": {
        "module": {
          "types": "./dist/index.d.ts",
          "default": "./dist/index.node.esm.js"
        },
        "import": {
          "types": "./dist/index.d.ts",
          "default": "./dist/index.node.esm.js"
        },
        "require": {
          "types": "./dist/index.d.ts",
          "default": "./dist/index.node.cjs"
        }
      },
      "script": "./dist/bundle.iife.js",
      "default": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.browser.esm.js"
      }
    },
    "./esm-browser-bundle": "./dist/bundle.esm.min.js",
    "./esm-browser-bundle-nomin": "./dist/bundle.esm.js",
    "./iife-browser-bundle": "./dist/bundle.iife.js",
    "./umd-browser-bundle": "./dist/bundle.umd.js",
    "./dist/cjs/index.node": "./dist/index.node.cjs",
    "./dist/esm/index.node": "./dist/index.node.esm.js",
    "./dist/index.node": {
      "types": "./dist/index.d.ts",
      "default": "./dist/index.node.cjs"
    },
    "./dist/index.node.esm": {
      "types": "./dist/index.d.ts",
      "default": "./dist/index.node.esm.js"
    },
    "./dist/index.browser.esm": {
      "types": "./dist/index.d.ts",
      "default": "./dist/index.browser.esm.js"
    },
    "./types": "./dist/index.d.ts"
  },
  "imports": {
    "#pkg": {
      "require": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.node.cjs"
      },
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.node.esm.js"
      },
      "default": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.browser.esm.js"
      }
    }
  },
  "directories": {
    "build": "./build",
    "dist": "./dist",
    "docs": "./docs",
    "src": "./src",
    "test": "./test",
    "benchmark": "./benchmark",
    "mocha-ts": "./.mocha-ts"
  },
  "scripts": {
    "build": "npm run lint:src && npm run build:js && npm run lint:test && npm run docs",
    "build:js": "rollup -c build/rollup.config.js",
    "postbuild:js": "rimraf .types",
    "clean": "rimraf .mocha-ts coverage dist types .types docs",
    "coverage": "c8 --clean --check-coverage --exclude \"{src/ts/**/*.spec.ts,test,test-vectors,build}\" --exclude-after-remap --reporter=text --reporter=lcov node ./build/bin/mocha-ts.cjs --commonjs ",
    "docs": "node build/build.docs.cjs",
    "git:add": "git add -A",
    "lint": "ts-standard --fix",
    "lint:src": "ts-standard --fix \"src/**/!(*.spec).ts\"",
    "lint:test": "ts-standard --fix \"{test/**/*.ts,src/**/*.spec.ts}\"",
    "mocha-ts": "node --experimental-modules --experimental-json-modules --es-module-specifier-resolution=node ./build/bin/mocha-ts.cjs ",
    "mocha-ts:cjs": "node ./build/bin/mocha-ts.cjs --commonjs ",
    "mocha-ts:watch": "npm run mocha-ts:cjs -- --watch ",
    "mocha-ts:browser": "node build/testing/browser/index.cjs ",
    "mocha-ts:browser-headless": "node build/testing/browser/index.cjs headless ",
    "preversion": "npm run build && npm test",
    "version": "npm run docs && git add -A",
    "test": "npm run test:node",
    "test:browser": "npm run mocha-ts:browser -- test/tests.ts",
    "test:browser-headless": "npm run mocha-ts:browser-headless -- test/tests.ts",
    "test:node": "npm run test:node-cjs && npm run test:node-esm",
    "test:node-cjs": "npm run mocha-ts:cjs -- test/tests.ts",
    "test:node-esm": "npm run mocha-ts -- test/tests.ts",
    "watch": "npm run mocha-ts:watch "
  },
  "ts-standard": {
    "project": "tsconfig.json",
    "env": [
      "mocha"
    ],
    "globals": [
      "IS_BROWSER",
      "browser",
      "page",
      "chai"
    ],
    "ignore": [
      "dist/**/*",
      "examples/**/*",
      "types/**/*",
      "benchmark/**/*"
    ]
  },
  "devDependencies": {
    "@i3m/base-wallet": "^2.5.8",
    "@i3m/bok-wallet": "^2.5.9",
    "@i3m/non-repudiation-library": "^2.5.0",
    "@rollup/plugin-commonjs": "^24.0.1",
    "@rollup/plugin-inject": "^5.0.3",
    "@rollup/plugin-json": "^6.0.0",
    "@rollup/plugin-multi-entry": "^6.0.0",
    "@rollup/plugin-node-resolve": "^15.0.1",
    "@rollup/plugin-replace": "^5.0.1",
    "@rollup/plugin-terser": "^0.4.0",
    "@rollup/plugin-typescript": "^11.1.0",
    "@types/chai": "^4.2.22",
    "@types/mocha": "^10.0.0",
    "c8": "^7.12.0",
    "chai": "^4.3.3",
    "dotenv": "^16.0.3",
    "glob": "^10.0.0",
    "json5": "^2.2.0",
    "minimatch": "^9.0.0",
    "mocha": "^10.0.0",
    "pirates": "^4.0.1",
    "puppeteer": "^19.1.2",
    "rimraf": "^5.0.0",
    "rollup": "^3.20.2",
    "rollup-plugin-dts": "^5.3.0",
    "ts-standard": "^12.0.2",
    "tslib": "^2.3.1",
    "typedoc": "~0.23.0",
    "typedoc-plugin-markdown": "~3.14.0",
    "typescript": "^4.9.0"
  },
  "dependencies": {
    "@i3m/wallet-desktop-openapi": "^2.5.8",
    "@i3m/wallet-protocol": "^2.5.8"
  }
}
