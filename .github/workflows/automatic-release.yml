name: auto test npm-publish and release draft 

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18]

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install root dependecies
        run: npm ci

      - name: Lerna bootstrap (install packages dependecies)
        run: npx lerna bootstrap
      
      - name: Run tests
        run: npm test
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  
  npm-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
           
      - name: NPM publish
        run: ./scripts/libraries.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  pack:
    name: pack and generate release draft
    needs: npm-publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-10.15]
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install root dependencies
        run: npm ci

      - name: Install desktop dependencies
        run: npm run install:desktop

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # Directory where NPM/Yarn commands should be run
          package_root: './packages/wallet-desktop'

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}