name: auto test npm-publish and release draft 

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ['16.x', '18.x']
      # When set to true, GitHub cancels all in-progress jobs if any matrix job fails.
      fail-fast: false
      # The maximum number of jobs that can run simultaneously. Set to 1 if you can't run tests in parallel
      # max-parallel: 1
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
      
      - name: Install root dependecies
        run: npm ci

      - name: Lerna bootstrap (install packages dependecies)
        run: npx lerna bootstrap
      
      - name: Run tests
        run: npm test
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  
  npm-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
           
      - name: NPM publish
        run: ./scripts/libraries.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    needs: npm-publish
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: 'registry.gitlab.com'
          username: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
          password: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
      
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/cloud-vault-server

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: registry.gitlab.com/i3-market/code/wp3/t3.2/i3m-wallet-monorepo/cvs:${{ steps.package-version.outputs.current-version}},registry.gitlab.com/i3-market/code/wp3/t3.2/i3m-wallet-monorepo/cvs:latest
      
      - name: Ansible deploy
        run: |
          apt update && apt install -y curl
          curl --request POST --header "Authorization: Bearer ${{ secrets.ANSIBLE_DEPLOY_TOKEN }}" "{{ secrets.ANSIBLE_DEPLOY_URL }}"

  pack:
    name: pack and generate release draft
    needs: npm-publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-10.15]
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Install root dependencies
        run: npm ci

      - name: Install desktop dependencies
        run: npm run install:desktop

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # Directory where NPM/Yarn commands should be run
          package_root: './packages/wallet-desktop'

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}